on:
  pull_request:
  push:
    branches:
      - main

jobs:
  github_check_job:
    runs-on: ubuntu-latest
    steps:
      - name: チェックアウト
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 全てのコミットを取得

      - name: Get PR commits
        id: get-commits
        run: |
          # PR番号を設定 (イベントから取得するか、直接指定)
          PR_NUMBER=${{ github.event.pull_request.number || inputs.pr_number }}
          
          # コミットのoidとmessageHeadlineを取得
          COMMITS=$(gh pr view $PR_NUMBER --repo ${{ github.repository }} --json commits \
            --jq '.commits[] | {oid: .oid, messageHeadline: .messageHeadline}')
          
          # 結果をエコー (デバッグ用)
          echo "PR #$PR_NUMBER Commits:"
          echo "$COMMITS"
          
          # 結果を出力変数に設定 (エスケープして設定)
          COMMITS_ESCAPED=$(echo "$COMMITS" | jq -c -s '.')
          echo "commits=$COMMITS_ESCAPED" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # PR情報がなかった場合のフォールバック
      - name: Set fallback commit info
        id: fallback-commits
        if: steps.PR.outputs.pr_found != 'true'
        run: |
          echo "commits=No PR found for this commit" >> $GITHUB_OUTPUT

      - name: テスト結果の Slack 通知
        uses: ravsamhq/notify-slack-action@v2
        if: always()
        with:
          status: ${{ job.status }}
          notification_title: "`${{ job.status == 'success' && '✅' || '❌' }}` ${{ github.event.repository.name }} のテストが${{ job.status == 'success' && '成功しました' || '失敗しました' }}"
          message_format: |
            ブランチ: `${{ github.ref_name }}`
            コミット: `{commit_sha}`

            テスト結果
            > Unitテスト `${{ job.status == 'success' && 'PASS' || 'FAIL' }}`
            > E2Eテスト  `${{ job.status == 'success' && 'PASS' || 'FAIL' }}`
            
            PR情報:
              - PR JSON: ${{ toJSON(fromJSON(steps.get-commits.outputs.commits)) }}

          footer: "<${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}|コミット詳細を表示> | <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|ワークフロー実行を表示>"
          notify_when: "success,failure"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
